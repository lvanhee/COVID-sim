;;here one should also include caring for children.
;;Now it's highjacking the decision process
to-report my-available-activity-descriptors
  if migration? and is-away?
  [
    if (not (random-float 1 < probability-getting-back-when-abroad)) [
      report (list (list away-gathering-point travelling-reason solo-transportation-method false))
    ]
  ]
  

  let activities (list (list my-home "rest" stay-here-transportation-method))

  if has-internally-visible-symptoms? or is-believing-to-be-infected?
  [ set activities add-activity-descriptor-with-transport my-hospital treatment-motive activities ]

  if (slice-of-the-day = "morning" or slice-of-the-day = "afternoon") and is-working-day-for-me?
    [
      if is-child? [
        set activities add-activity-descriptor-with-transport my-school "mandatory" activities
          ]
      if is-student?
      [
        set activities add-activity-descriptor-with-transport my-university "learning" activities
      ]

      if is-worker? [
         if is-technically-feasible-to-work-from-home? and I-know-of-working-from-home? [
          set activities add-activity-descriptor-with-transport my-home work-motive activities
        ]
        set activities add-activity-descriptor-with-transport my-work work-motive activities
      ]
  ]
  
  if slice-of-the-day = "evening" or not is-working-day-for-me? or age = "retired"
  [
    if age != "young" and slice-of-the-day != "night" and is-shops-open-today? [
      set activities add-activity-descriptor-with-transport one-of my-essential-shops "essential shopping" activities
    ]

    set activities add-activity-descriptor-with-transport my-public-leisure "relaxing" activities
    if age != "young" and slice-of-the-day != "night" and is-shops-open-today? [
      set activities add-activity-descriptor-with-transport my-non-essential-shop "shopping" activities
    ]
    set activities add-activity-descriptor-with-transport my-private-leisure "relaxing" activities

  ]

  set activities add-activity-descriptor-with-transport my-hospital "get-tested" activities
  set activities filter [ i -> [is-accessible?] of first i] activities

  ;show [gathering-type] of (turtle-set map [ad -> first ad] activities)


  if any? people-that-depend-on-me with [ (current-person-I-depend-on = nobody or current-person-I-depend-on = myself)
    and is-currently-in-sitation-of-active-dependence?]
  [
    ask people-that-depend-on-me [ set current-person-I-depend-on myself]
    set activities filter [ i -> can-be-done-with-a-dependable-person? i] activities
  ]
  
  let ret []
  foreach activities [ activity ->
    set ret fput (lput false activity) ret
    if I-know-of-social-distancing? [
      set ret fput (lput true activity) ret
    ]
  ]
  
  if is-officially-asked-to-quarantine? and is-psychorigidly-staying-at-home-when-quarantining?
  [
    set ret filter [[x] -> location-of x = my-home] ret
  ]

  report ret
end

to-report add-activity-descriptor-with-transport [gp mo activities]
  if not is-gathering-point? gp [error (sentence gp mo "should be a gathering point")]
  ifelse gp != current-activity [
    set activities lput (list gp mo public-transportation-method) activities
    if not is-child? [
      set activities lput (list gp mo shared-car-transportation-method) activities
    ]
    ifelse do-I-need-motorized-transport gp [
      if do-I-own-a-car? [set activities lput (list gp mo solo-transportation-method) activities]
    ]
    [set activities lput (list gp mo solo-transportation-method) activities]
    report activities
  ]
  [ report lput (list gp mo stay-here-transportation-method) activities
  ] 
end

to select-activity
  let c-a my-preferred-available-activity-descriptor
  
  ;;select if migration takes over and people move around
  if (migration? and random-float 1 < probability-going-abroad) [
    set c-a (list away-gathering-point travelling-motive solo-transportation-method false)
  ]
  
  let loc location-of c-a
  select-activity-wtf? loc
  set current-activity loc
  set current-motivation motive-of c-a
  set current-means-of-transport method-of-transportation-of c-a
  set is-I-apply-social-distancing? social-distancing-of c-a
  if current-activity != away-gathering-point and current-motivation = travelling-motive [error "wrong place while travelling"]
  if log-violating-quarantine? [ process-quarantine-violation-event]
end

;;this function is the main bottleneck of the whole application!
;;it draws 0.2ms per call 
to select-activity-wtf? [loc]
  
 ; set is-moving-outside-for-reaching-current-activity? not (current-activity = location-of c-a)
  set is-moving-outside-for-reaching-current-activity? not (current-activity = loc)
end
